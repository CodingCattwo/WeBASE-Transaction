<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webank.webase.transaction.trans.TransMapper">
    <update id="createTbTransaction">
        CREATE TABLE IF NOT EXISTS tb_transaction (
            id int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
            user_id int(11) NOT NULL COMMENT '用户编号',
            uuid varchar(64) NOT NULL COMMENT '业务流水号',  
            contract_name varchar(32) NOT NULL COMMENT '合约名称',
            contract_version varchar(32) NOT NULL COMMENT '合约版本号',
            func_name varchar(32) NOT NULL COMMENT '调用的合约方法名',
            func_param text COMMENT '合约方法的入参json',
            request_count tinyint(4) DEFAULT '0' COMMENT '请求次数',
            trans_status tinyint(4) DEFAULT '0' COMMENT '处理状态(0-未处理，1-处理成功)',
            gmt_create datetime DEFAULT NULL COMMENT '创建时间',
            gmt_modify datetime DEFAULT NULL COMMENT '修改时间',
            PRIMARY KEY (id),
            UNIQUE KEY idx_tt_uu_01 (user_id,uuid),
            KEY idx_tt_ts_02 (trans_status)
        ) COMMENT='交易请求信息表' ENGINE=InnoDB CHARSET=utf8
    </update>
    <insert id="insertTransInfo" parameterType="com.webank.webase.transaction.trans.TransInfo">
        <selectKey keyProperty="id" resultType="java.lang.Long">
               select LAST_INSERT_ID()
        </selectKey>
        insert into tb_transaction(
            `user_id`,
            `uuid`,
            `contract_name`,
            `contract_version`,
            `func_name`,
            `func_param`,
            `request_count`,
            `trans_status`,
            `gmt_create`,
            `gmt_modify`
        ) values (
            #{userId},
            #{uuid},
            #{contractName},
            #{version},
            #{funcName},
            #{funcParam},
            0,
            0,
            NOW(),
            DATE_SUB(NOW(),INTERVAL 1 DAY)
        )
    </insert>
    
    <select id="selectUnStatTrans" resultType="com.webank.webase.transaction.trans.TransInfo">
        select 
            id,
            user_id as userId,
            contract_name as contractName,
            contract_version as version,
            func_name as funcName,
            func_param as funcParam,
            request_count as requestCount,
            trans_status as transStatus
        from tb_transaction
        where trans_status = 0
        <![CDATA[
          and request_count <= #{requestCountMax}
          and TIMESTAMPDIFF(SECOND,gmt_modify,NOW()) >= #{intervalTime}
        ]]>
          limit 0,#{selectCount}
    </select>
    
    <select id="selectUnStatTransByJob" resultType="com.webank.webase.transaction.trans.TransInfo">
        select 
            id,
            user_id as userId,
            contract_name as contractName,
            contract_version as version,
            func_name as funcName,
            func_param as funcParam,
            request_count as requestCount,
            trans_status as transStatus
        from tb_transaction
        where trans_status = 0
        and MOD(id,#{shardingTotalCount}) = #{shardingItem}
        <![CDATA[
          and request_count <= #{requestCountMax}
          and TIMESTAMPDIFF(SECOND,gmt_modify,NOW()) >= #{intervalTime}
        ]]>
          limit 0,#{selectCount}
    </select>
    
    <update id="updateRequestCount">
        update tb_transaction set request_count=#{requestCount},gmt_modify=NOW() where id = #{id}
    </update>
    
    <update id="updateTransStatus">
        update tb_transaction set trans_status=1,gmt_modify=NOW() where id = #{id}
    </update>
</mapper>